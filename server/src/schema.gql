# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreatePermissionInput {
  label: String!
  value: String!
}

input CreateUserInput {
  avatar: String
  birthday: DateTime
  email: String!
  first_name: String
  last_name: String!
  password: String!
  phone: String!
  refresh_token: String
  role_id: ID
  role_ids: [ID!]
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createPermission(data: CreatePermissionInput!): Permission!
  createUser(data: CreateUserInput!): User!
  refreshAccessToken: TokenWithUser!
  removePermission(id: Float!): Boolean!
  removeUser(id: Float!): Boolean!
  signIn(input: SignInInput!): TokenWithUser!
  signOut: Boolean!
  signUp(input: SignUpInput!): TokenWithUser!
  updatePermission(data: UpdatePermissionInput!, id: Float!): Permission!
  updateUser(data: UpdateUserInput!, id: Float!): User!
}

input Pagination {
  """Number of items per page"""
  limit: Int!

  """Page number starting from 1"""
  page: Int!
}

"""permission"""
type Permission {
  id: ID!
  label: String!
  value: String!
}

input PermissionArgs {
  filter: PermissionFilter
  pagination: Pagination
}

input PermissionFilter {
  id: ID
  label: String
  value: String
}

type Query {
  permission(args: PermissionArgs): Permission!
  permissions(args: PermissionArgs): [Permission!]!
  user(args: UserArgs): User!
  users(args: UserArgs): [User!]!
}

"""role"""
type Role {
  created_at: DateTime!
  creator_id: ID
  delete_at: DateTime
  deleter_id: ID
  description: String
  id: ID!
  name: String!
  updated_at: DateTime!
  updater_id: ID
}

input SignInInput {
  password: String!
  username: String!
}

input SignUpInput {
  email: String!
  last_name: String!
  password: String!
  phone: String!
  username: String!
}

type Subscription {
  permissionCreated: Permission!
  permissionRemoved: Permission!
  permissionUpdated: Permission!
  userCreated: User!
  userRemoved: User!
  userUpdated: User!
}

type TokenWithUser {
  access_token: String!
  user: User!
}

input UpdatePermissionInput {
  label: String
  value: String
}

input UpdateUserInput {
  avatar: String
  birthday: DateTime
  email: String
  first_name: String
  last_name: String
  password: String
  phone: String
  refresh_token: String
  role_id: ID
  role_ids: [ID!]
  username: String
}

"""user"""
type User {
  avatar: String
  birthday: DateTime
  created_at: DateTime!
  creator_id: ID
  delete_at: DateTime
  deleter_id: ID
  email: String!
  first_name: String
  id: ID!
  last_name: String!
  password: String!
  phone: String!
  refresh_token: String
  roles: Role!
  updated_at: DateTime!
  updater_id: ID
  username: String!
}

input UserArgs {
  filter: UserFilter
  pagination: Pagination
}

input UserFilter {
  id: ID
  username: String
}